{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-12T12:39:50.185Z",
    "end": "2022-08-12T12:39:50.247Z",
    "duration": 62,
    "testsRegistered": 6,
    "passPercent": 16.666666666666664,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 5,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "0cd13760-5f6c-4846-97bd-ccca170c8d3c",
      "title": "",
      "fullFile": "D:\\Fazzrack\\Task\\tas-week3\\testcases\\test.js",
      "file": "\\testcases\\test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b2b5c3d7-40bd-446f-89b6-a967b17384db",
          "title": "Alltesting | API Test for task week 3",
          "fullFile": "D:\\Fazzrack\\Task\\tas-week3\\testcases\\test.js",
          "file": "\\testcases\\test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Seeding data user from id  in \"Alltesting | API Test for task week 3\"",
              "fullTitle": "Alltesting | API Test for task week 3 \"before all\" hook: Seeding data user from id  in \"Alltesting | API Test for task week 3\"",
              "timedOut": false,
              "duration": 41,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.postUser(dataTarget);\n       isiData = Object.assign(response.body);\n       expect(response.status).to.equal(200);",
              "err": {},
              "uuid": "05daf30c-6ff8-4ac4-8b37-001bd3e9fc9c",
              "parentUUID": "b2b5c3d7-40bd-446f-89b6-a967b17384db",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Remove data user  in \"Alltesting | API Test for task week 3\"",
              "fullTitle": "Alltesting | API Test for task week 3 \"after all\" hook: Remove data user  in \"Alltesting | API Test for task week 3\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.deleteUser(isiData);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "6078b228-6890-43be-8334-d92f3311fb24",
              "parentUUID": "b2b5c3d7-40bd-446f-89b6-a967b17384db",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Testcase1 | GET id user with valid data then can access",
              "fullTitle": "Alltesting | API Test for task week 3 Testcase1 | GET id user with valid data then can access",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const idYgAkanDicari = '56afff88-d9b6-490c-bf5d-f19cd71c5074';\n        \n        const response = await api.getIdUser(idYgAkanDicari);\n        expect(response.body);\n        expect(response.status).to.equal(200);\n        expect(response.body.id).to.equal(idYgAkanDicari);\n        expect(response.body).has.jsonSchema(jsonSchema);",
              "err": {},
              "uuid": "5eb53f7c-f7b5-4ae2-8b6c-903e51df9307",
              "parentUUID": "b2b5c3d7-40bd-446f-89b6-a967b17384db",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Testcase2 | GET id user with invalid data then data not found",
              "fullTitle": "Alltesting | API Test for task week 3 Testcase2 | GET id user with invalid data then data not found",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let idYgAkanDicari = 'j6bf9a180-283a-4886-a91a-0470af58b0fc'\n        let response = await api.getIdUser(idYgAkanDicari);\n        expect(response.body);\n        expect(response.status).to.equal(404);\n        expect(response.body.errorCode).to.equal('ER-01');\n        expect(response.body.message).to.equal('user not found');",
              "err": {},
              "uuid": "62b646e0-e873-4e57-8cbe-e7613307c6a7",
              "parentUUID": "b2b5c3d7-40bd-446f-89b6-a967b17384db",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Testcase3 | PUT update data occupation and nationality then data success update",
              "fullTitle": "Alltesting | API Test for task week 3 Testcase3 | PUT update data occupation and nationality then data success update",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isiData.occupation = 'QA automation';\nisiData.nationality = 'vietnam';\nlet response = await api.putUser(isiData);\nexpect(response.status).to.equal(200);\nexpect(response.body.occupation).to.equal('QA automation');\nexpect(response.body.nationality).to.equal('vietnam');\nexpect(response.body).has.jsonSchema(jsonSchema);",
              "err": {},
              "uuid": "81f7c668-b583-4e68-ac4f-5ac759315f27",
              "parentUUID": "b2b5c3d7-40bd-446f-89b6-a967b17384db",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Testcase4 | PUT update data when age value 0 then data cannot update",
              "fullTitle": "Alltesting | API Test for task week 3 Testcase4 | PUT update data when age value 0 then data cannot update",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isiData.age = 0;\n\nlet response = await api.putUser(isiData);\nexpect(response.body);\nexpect(response.status).to.equal(400);\nexpect(response.body.errorCode).to.equal('ER-03');\nexpect(response.body.message).to.equal('you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender');",
              "err": {},
              "uuid": "0604c10a-01bd-4735-952f-1b174b37f4eb",
              "parentUUID": "b2b5c3d7-40bd-446f-89b6-a967b17384db",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Testcase5 | PUT update data when hobbies empty array then data cannot update",
              "fullTitle": "Alltesting | API Test for task week 3 Testcase5 | PUT update data when hobbies empty array then data cannot update",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isiData.hobbies = [];\n\nlet response = await api.putUser(isiData);\nexpect(response.body);\nexpect(response.status).to.equal(400);\nexpect(response.body.errorCode).to.equal('ER-03');\nexpect(response.body.message).to.equal('you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender');",
              "err": {},
              "uuid": "97a4e0f5-e573-4854-8611-9d26e2908550",
              "parentUUID": "b2b5c3d7-40bd-446f-89b6-a967b17384db",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Testcase6 | PUT update data when id value null then data not found",
              "fullTitle": "Alltesting | API Test for task week 3 Testcase6 | PUT update data when id value null then data not found",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isiData.id = null;\n\nlet response = await api.putUser(isiData);\nexpect(response.body);\nexpect(response.status).to.equal(404);\nexpect(response.body.errorCode).to.equal('ER-01');\nexpect(response.body.message).to.equal('user not found');",
              "err": {},
              "uuid": "d3bac792-552a-4bad-a6cc-67461ec08a8b",
              "parentUUID": "b2b5c3d7-40bd-446f-89b6-a967b17384db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3bac792-552a-4bad-a6cc-67461ec08a8b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [
            "5eb53f7c-f7b5-4ae2-8b6c-903e51df9307",
            "62b646e0-e873-4e57-8cbe-e7613307c6a7",
            "81f7c668-b583-4e68-ac4f-5ac759315f27",
            "0604c10a-01bd-4735-952f-1b174b37f4eb",
            "97a4e0f5-e573-4854-8611-9d26e2908550"
          ],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}